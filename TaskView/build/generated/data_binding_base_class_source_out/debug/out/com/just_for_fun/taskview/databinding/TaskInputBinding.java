// Generated by view binder compiler. Do not edit!
package com.just_for_fun.taskview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.just_for_fun.taskview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TaskInputBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton downArrow;

  @NonNull
  public final LinearLayout inputContent;

  @NonNull
  public final LinearLayout mainContent;

  @NonNull
  public final EditText notesArea;

  @NonNull
  public final ConstraintLayout notesLayout;

  @NonNull
  public final ImageButton previewButton;

  @NonNull
  public final CheckBox taskCheckbox;

  @NonNull
  public final EditText taskEditText;

  @NonNull
  public final ImageButton upArrow;

  @NonNull
  public final ImageButton uploadButton;

  private TaskInputBinding(@NonNull LinearLayout rootView, @NonNull ImageButton deleteButton,
      @NonNull ImageButton downArrow, @NonNull LinearLayout inputContent,
      @NonNull LinearLayout mainContent, @NonNull EditText notesArea,
      @NonNull ConstraintLayout notesLayout, @NonNull ImageButton previewButton,
      @NonNull CheckBox taskCheckbox, @NonNull EditText taskEditText, @NonNull ImageButton upArrow,
      @NonNull ImageButton uploadButton) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.downArrow = downArrow;
    this.inputContent = inputContent;
    this.mainContent = mainContent;
    this.notesArea = notesArea;
    this.notesLayout = notesLayout;
    this.previewButton = previewButton;
    this.taskCheckbox = taskCheckbox;
    this.taskEditText = taskEditText;
    this.upArrow = upArrow;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TaskInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TaskInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.task_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TaskInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.down_arrow;
      ImageButton downArrow = ViewBindings.findChildViewById(rootView, id);
      if (downArrow == null) {
        break missingId;
      }

      id = R.id.input_content;
      LinearLayout inputContent = ViewBindings.findChildViewById(rootView, id);
      if (inputContent == null) {
        break missingId;
      }

      id = R.id.main_content;
      LinearLayout mainContent = ViewBindings.findChildViewById(rootView, id);
      if (mainContent == null) {
        break missingId;
      }

      id = R.id.notesArea;
      EditText notesArea = ViewBindings.findChildViewById(rootView, id);
      if (notesArea == null) {
        break missingId;
      }

      id = R.id.notesLayout;
      ConstraintLayout notesLayout = ViewBindings.findChildViewById(rootView, id);
      if (notesLayout == null) {
        break missingId;
      }

      id = R.id.previewButton;
      ImageButton previewButton = ViewBindings.findChildViewById(rootView, id);
      if (previewButton == null) {
        break missingId;
      }

      id = R.id.taskCheckbox;
      CheckBox taskCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (taskCheckbox == null) {
        break missingId;
      }

      id = R.id.taskEditText;
      EditText taskEditText = ViewBindings.findChildViewById(rootView, id);
      if (taskEditText == null) {
        break missingId;
      }

      id = R.id.up_arrow;
      ImageButton upArrow = ViewBindings.findChildViewById(rootView, id);
      if (upArrow == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      ImageButton uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new TaskInputBinding((LinearLayout) rootView, deleteButton, downArrow, inputContent,
          mainContent, notesArea, notesLayout, previewButton, taskCheckbox, taskEditText, upArrow,
          uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
